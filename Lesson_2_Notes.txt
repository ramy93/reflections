#### Lesson 2  #### 

Initializing a repository

Initial commit will appear if there is no other commit

Untracked files will appear (all files in the directory that you created a new repository)


Staging area- area where you can add files to be added into a commit. It is also a copy of most recent commit

git add [file]   will add file to staging area

git status       will check the status of your repository, ex. what is in the staging area, what is untracked

git commit [file]  will create a commit

##THIS LINE IS FOR TEST 

 git diff will compare working directory and staging area.
No arguments are added after git diff. This is often done when
You are making changes and wanna see what the difference is 
Between staging area and your newly edited files. NOTE: staging
Area is a snapshot of the most recent commit.

git diff --staged    will check the difference between staging area and most recent commit. 
This is done after you add your changes to your staging area and before commit. 
This checks if what you're about to commit is really what you want to commit. SEE PICTURE BELOW (ONENOTE)


git branch will list all the branches currently, signifying which is open in green. To create a new branch use  :     git branch [name of branch]   

Then to check out a new branch, use:  git checkout [name of branch]

To delete a branch:  git branch -d [name of branch]


If you want to checkout a previous commit in a log and perhaps make changes to that commit without impacting the more recent commits you can do this:

git checkout [commit_id]

git checkout -b [new_branch_name]

now you will have a new branch named new_branch_name with commit_id as the most recent commit. 

git branch [branch_a] [branch_b] merges two branches together? 

git show   compares a commit to its parent. This is useful after a merge, as often commits compared to the previous commit might be comparing gits that came from different branches